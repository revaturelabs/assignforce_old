AssignForce Documentation
-----------------------------
Known Issues:
- On batch page there are race conditions that are dependent on a wait on the server side.
- Location page doesn't always, refresh
- Batches page doesn't have a location associated with it
- landing page doesn't actually grab data from the "Black Box" or run the functionality
- 

----------------------------------
Use cases:
----------
As an admin I can:
- create and view locations
- have a landing page
- view all trainers and their current status
- view all upcoming and current batches
- create an upcoming batch
- view a trainer's availability and technologies (skills)
- assign a room, trainer, and curriculum to a batch

As the system I can:
- send alerts for inconsistencies
- assign a best fit trainer based on criteria


-----------------------------------------
General Layout
--------------
Java Side
---------
Controller -> Service -> Dao -> DB
BB connection
Ctrl -> Service -> RestService

Front side
-----------
Html -> AngularCtrl -> Angular Service -> Spring Ctrl


------------------------------
Tidbits:
- inherited from a generic Dao base for core CRUD method(s)
- specialized methods were "setup" inside of the relevant subRepository
- Most of the dao calling is done in the daoServiceImpl, some is done in BatchServiceImpl
- com.ateam.rest contains teh code that was going to be used for connecting directly with the Black Box (BB), was never actually used
- Some necessary associations through hibernate may not be the most ideal (bidirectionaly ManyToOne and what not)
- Random txt documents in folders just to make sure that git didnt remove them early on, were never removed
- most of the angular are broken up "logically" into different files, core is app.js
- home.html is the base page of our single page application
- 


